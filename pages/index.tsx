import Head from "next/head";
import styles from "../styles/Home.module.css";
import React, { ReactEventHandler, useState } from "react";
import { getCountry, getCountryWithCode } from "../reactquery/api";
import { useQuery } from "react-query";
import CountryModal from "../components/modal";

export default function Home() {
  const [data, setData] = useState([]);
  const [sort, setSort] = useState("");
  const [isModal, setModal] = useState<boolean>(false);
  const [countryCode, setCountryCode] = useState<string>("vn");
  const countries = useQuery("countries", () => getCountry());

  const countryData = useQuery("country", () =>
    getCountryWithCode(countryCode)
  );

  React.useEffect(() => {
    if (countries.data?.data.Countries) {
      setData(arraySort(countries.data?.data.Countries, sort));
    }
  }, [countries]);

  const arraySort = (arr: any, sortType: string) => {
    const sor = sortType.split("_");
    if (sor.length === 2) {
      arr.sort(function (a: any, b: any) {
        if (sor[1] === "DESC") {
          return a[sor[0]] - b[sor[0]];
        }
        return b[sor[0]] - a[sor[0]];
      });
      return arr;
    }
    return arr;
  };

  React.useEffect(() => {
    if (
      countries.data?.data.Countries &&
      countries.data?.data.Countries.length &&
      sort
    ) {
      setData(arraySort(countries.data?.data.Countries, sort));
    }
    return () => setData([]);
  }, [sort]);

  const handleSort = (e: React.ChangeEvent<HTMLSelectElement>): void => {
    if (e.currentTarget.value) {
      setSort(e.currentTarget.value);
    }
  };

  const handleCountry = (
    e: React.MouseEvent<HTMLDivElement>,
    countryCode: string
  ): void => {
    if (countryCode) {
      setModal(true);
      setCountryCode(countryCode);
    }
  };

  React.useEffect(() => {
    countryData.refetch();
    return () => countryData.remove();
  }, [countryCode]);

  const removeModal = () => {
    setModal(false);
  };

  return (
    <>
      <Head>
        <title>Covid tracker</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className="covid-tracker">Covid Tracker</h1>
        <div className="container">
          <div className="select-box">
            <select onChange={handleSort}>
              <option value="">Sort</option>
              <option value="TotalConfirmed_DESC">Confirmed DESC</option>
              <option value="TotalConfirmed_ASC">Confirmed ASC</option>
              <option value="TotalDeaths_DESC">Deaths DESC</option>
              <option value="TotalDeaths_ASC">Deaths ASC</option>
              <option value="TotalRecovered_DESC">Recovered DESC</option>
              <option value="TotalRecovered_ASC">Recovered ASC</option>
            </select>
          </div>
        </div>
        <div className="country-title">
          <div className="country-name-title">Country name</div>
          <div className="confirmed-title">Confirmed</div>
          <div className="total-deaths-title">Deaths</div>
          <div className="total-recovered-title">Recovered</div>
        </div>
        <div className="country-scroll">
          {!countries.isLoading && data.length ? (
            data.map((item: any) => {
              return (
                <div className="country" key={item.ID}>
                  <div
                    className="country-name"
                    onClick={(e) => handleCountry(e, item.CountryCode)}
                  >
                    {item.Country}
                  </div>
                  <div className="confirmed">{item.TotalConfirmed}</div>
                  <div className="total-deaths">{item.TotalDeaths}</div>
                  <div className="total-recovered">{item.TotalRecovered}</div>
                </div>
              );
            })
          ) : (
            <>
              <div className="data-empty">
                <h3>Data is empty !</h3>
                <div>
                  <h5>api hạn chế truy cập nên lúc có dự liệu lúc không.</h5>
                </div>
              </div>
            </>
          )}
        </div>
        {isModal && !countryData.isLoading && (
          <CountryModal country={countryData.data} removeModal={removeModal} />
        )}
      </main>
    </>
  );
}
